
/*
Auto-generated by CVXPYgen on June 12, 2024 at 14:41:56.
Content: Declarations for Python binding with pybind11.
*/

// User-defined parameters
struct CPG_Params_cpp_t {
    std::array<double, 12> param9284;
    std::array<double, 3> param9283;
};

// Flags for updated user-defined parameters
struct CPG_Updated_cpp_t {
    bool param9284;
    bool param9283;
};

// Primal solution
struct CPG_Prim_cpp_t {
    std::array<double, 39> var9281;
    std::array<double, 12> var9282;
};

// Dual solution
struct CPG_Dual_cpp_t {
    std::array<double, 3> d0;
    std::array<double, 3> d1;
    double d2;
    std::array<double, 3> d3;
    double d4;
    std::array<double, 3> d5;
    double d6;
    std::array<double, 3> d7;
    double d8;
    std::array<double, 3> d9;
    double d10;
    std::array<double, 3> d11;
    double d12;
    std::array<double, 3> d13;
    double d14;
    std::array<double, 3> d15;
    double d16;
    std::array<double, 3> d17;
    double d18;
    std::array<double, 3> d19;
    double d20;
    std::array<double, 3> d21;
    double d22;
    std::array<double, 3> d23;
    double d24;
};

// Solver information
struct CPG_Info_cpp_t {
    double obj_val;
    int iter;
    int status;
    double pri_res;
    double dua_res;
    double time;
};

// Solution and solver information
struct CPG_Result_cpp_t {
    CPG_Prim_cpp_t prim;
    CPG_Dual_cpp_t dual;
    CPG_Info_cpp_t info;
};

// Main solve function
CPG_Result_cpp_t solve_cpp(struct CPG_Updated_cpp_t& CPG_Updated_cpp, struct CPG_Params_cpp_t& CPG_Params_cpp);
